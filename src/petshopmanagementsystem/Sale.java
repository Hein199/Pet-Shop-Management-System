/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package petshopmanagementsystem;

import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.DriverManager;
import java.sql.ResultSet;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author heinnaingsoe
 */
public class Sale extends javax.swing.JFrame {

    private String role;
    /**
     * Creates new form Sale
     */
    public Sale() {
        initComponents();
        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        int x = (int) ((screenSize.getWidth() - getWidth()) / 2);
        int y = (int) ((screenSize.getHeight() - getHeight()) / 2);
        setLocation(x, y);
        setTitle("Sale");
    }

    public Sale(String role) {
        this.role = role;
        initComponents();
        // Center the window on the screen
        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        int x = (int) ((screenSize.getWidth() - getWidth()) / 2);
        int y = (int) ((screenSize.getHeight() - getHeight()) / 2);
        setLocation(x, y);
        setTitle("Sale");
        if (role.equals("Cashier")) {
            // Make the Sale Record button invisible for "Cashier"
            btnSrecord.setVisible(false);
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        imglogo = new javax.swing.JLabel();
        btnLogout = new javax.swing.JToggleButton();
        btnInv = new javax.swing.JToggleButton();
        btnSale = new javax.swing.JToggleButton();
        btnSrecord = new javax.swing.JToggleButton();
        jPanel1 = new javax.swing.JPanel();
        txttitle = new javax.swing.JLabel();
        txtfeQty = new javax.swing.JTextField();
        txtcate = new javax.swing.JLabel();
        txtfeId = new javax.swing.JTextField();
        txtBreed = new javax.swing.JLabel();
        txtfeBreed = new javax.swing.JTextField();
        txtPrice = new javax.swing.JLabel();
        txtfePrice = new javax.swing.JTextField();
        btnPrint = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableSale = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtReceipt = new javax.swing.JTextArea();
        btnadd = new javax.swing.JButton();
        txtQty = new javax.swing.JLabel();
        txtBalance = new javax.swing.JLabel();
        txtfeBalance = new javax.swing.JTextField();
        txtTotal = new javax.swing.JLabel();
        txtfeTotal = new javax.swing.JTextField();
        txtChange = new javax.swing.JLabel();
        txtfeChange = new javax.swing.JTextField();
        cbCate = new javax.swing.JComboBox<>();
        btnClear = new javax.swing.JButton();
        txtId = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(255, 204, 102));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        imglogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/petshopmanagementsystem/Img/animallogo.jpeg"))); // NOI18N
        jPanel2.add(imglogo, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 30, 120, 130));

        btnLogout.setText("Log out");
        btnLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogoutActionPerformed(evt);
            }
        });
        jPanel2.add(btnLogout, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 410, 90, 30));

        btnInv.setText("Inventory");
        btnInv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInvActionPerformed(evt);
            }
        });
        jPanel2.add(btnInv, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 200, 120, 50));

        btnSale.setBackground(new java.awt.Color(153, 255, 255));
        btnSale.setText("Sale");
        btnSale.setMaximumSize(new java.awt.Dimension(78, 23));
        btnSale.setMinimumSize(new java.awt.Dimension(78, 23));
        btnSale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaleActionPerformed(evt);
            }
        });
        jPanel2.add(btnSale, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 270, 120, 50));

        btnSrecord.setText("Sale Record");
        btnSrecord.setMaximumSize(new java.awt.Dimension(78, 23));
        btnSrecord.setMinimumSize(new java.awt.Dimension(78, 23));
        btnSrecord.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSrecordActionPerformed(evt);
            }
        });
        jPanel2.add(btnSrecord, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 340, 120, 50));

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 190, 570));

        jPanel1.setBackground(new java.awt.Color(131, 205, 244));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txttitle.setFont(new java.awt.Font("Kefa", 0, 24)); // NOI18N
        txttitle.setText("Pet Shop Management System");
        jPanel1.add(txttitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 0, 350, 60));

        txtfeQty.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtfeQtyActionPerformed(evt);
            }
        });
        jPanel1.add(txtfeQty, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 230, 150, -1));

        txtcate.setFont(new java.awt.Font("Hiragino Mincho ProN", 0, 14)); // NOI18N
        txtcate.setText("Category");
        jPanel1.add(txtcate, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 30, 60, -1));

        txtfeId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtfeIdActionPerformed(evt);
            }
        });
        txtfeId.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtfeIdKeyReleased(evt);
            }
        });
        jPanel1.add(txtfeId, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 80, 150, -1));

        txtBreed.setFont(new java.awt.Font("Hiragino Mincho ProN", 0, 14)); // NOI18N
        txtBreed.setText("Breed");
        jPanel1.add(txtBreed, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 130, 60, -1));
        jPanel1.add(txtfeBreed, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 130, 150, -1));

        txtPrice.setFont(new java.awt.Font("Hiragino Mincho ProN", 0, 14)); // NOI18N
        txtPrice.setText("Price");
        jPanel1.add(txtPrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 180, 60, -1));
        jPanel1.add(txtfePrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 180, 150, -1));

        btnPrint.setText("Print");
        btnPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrintActionPerformed(evt);
            }
        });
        jPanel1.add(btnPrint, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 270, 90, 40));

        tableSale.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        tableSale.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Breed", "Category", "Price", "QTY", "Total"
            }
        ));
        tableSale.setName(""); // NOI18N
        jScrollPane1.setViewportView(tableSale);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 60, 420, 250));

        txtReceipt.setColumns(20);
        txtReceipt.setRows(5);
        jScrollPane2.setViewportView(txtReceipt);

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 320, 380, 240));

        btnadd.setText("Add");
        btnadd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnaddActionPerformed(evt);
            }
        });
        jPanel1.add(btnadd, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 270, 90, 40));

        txtQty.setFont(new java.awt.Font("Hiragino Mincho ProN", 0, 14)); // NOI18N
        txtQty.setText("QTY");
        txtQty.setToolTipText("");
        jPanel1.add(txtQty, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 230, 60, -1));

        txtBalance.setFont(new java.awt.Font("Hiragino Mincho ProN", 0, 18)); // NOI18N
        txtBalance.setText("Balance");
        txtBalance.setToolTipText("");
        jPanel1.add(txtBalance, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 420, 70, -1));

        txtfeBalance.setFont(new java.awt.Font("Helvetica Neue", 0, 24)); // NOI18N
        txtfeBalance.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtfeBalance.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtfeBalanceActionPerformed(evt);
            }
        });
        txtfeBalance.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtfeBalanceKeyPressed(evt);
            }
        });
        jPanel1.add(txtfeBalance, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 400, 170, 50));

        txtTotal.setFont(new java.awt.Font("Hiragino Mincho ProN", 0, 18)); // NOI18N
        txtTotal.setText("Total");
        jPanel1.add(txtTotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 360, 60, -1));

        txtfeTotal.setFont(new java.awt.Font("Helvetica Neue", 0, 24)); // NOI18N
        txtfeTotal.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jPanel1.add(txtfeTotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 340, 170, 50));

        txtChange.setFont(new java.awt.Font("Hiragino Mincho ProN", 0, 18)); // NOI18N
        txtChange.setText("Change");
        jPanel1.add(txtChange, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 480, 70, -1));

        txtfeChange.setFont(new java.awt.Font("Helvetica Neue", 0, 24)); // NOI18N
        txtfeChange.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jPanel1.add(txtfeChange, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 460, 170, 50));

        cbCate.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Cat", "Dog", "Rabbit", "Bird" }));
        cbCate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbCateActionPerformed(evt);
            }
        });
        jPanel1.add(cbCate, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 30, 140, -1));

        btnClear.setText("Clear");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });
        jPanel1.add(btnClear, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 520, -1, -1));

        txtId.setFont(new java.awt.Font("Hiragino Mincho ProN", 0, 14)); // NOI18N
        txtId.setText("Pet_ID");
        jPanel1.add(txtId, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 80, 50, -1));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 0, 660, 570));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogoutActionPerformed
        // TODO add your handling code here:
        new Login().setVisible(true);
        dispose();
    }//GEN-LAST:event_btnLogoutActionPerformed

    private void btnSaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnSaleActionPerformed

    private void btnSrecordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSrecordActionPerformed
        // TODO add your handling code here:
        new SaleRecord(role).setVisible(true);
        dispose();
    }//GEN-LAST:event_btnSrecordActionPerformed

    private void btnInvActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInvActionPerformed
        // TODO add your handling code here:
        new Inventory(role).setVisible(true);
        dispose();
    }//GEN-LAST:event_btnInvActionPerformed

    private void txtfeIdKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtfeIdKeyReleased
        // TODO add your handling code here:
        try{
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/PetShopManagementSysDB","root","");
            String id = txtfeId.getText();
            String table = cbCate.getSelectedItem().toString();
            PreparedStatement pst = con.prepareStatement("SELECT " + table + "_id, Breed, Price FROM " + table + " WHERE " + table + "_id = ?");
            pst.setString(1, id);
            ResultSet rs = pst.executeQuery();
            
            if(rs.next()==true){
                String breed = rs.getString(2);
                String price = rs.getString(3);
                txtfeBreed.setText(breed);
                txtfePrice.setText(price);
            }
            else{
                txtfeBreed.setText("");
                txtfePrice.setText("");
            }
            txtfeQty.requestFocus();
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_txtfeIdKeyReleased

    private void cbCateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbCateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbCateActionPerformed

    private void txtfeIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtfeIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtfeIdActionPerformed
    
    // Function to check duplicate item addition to sale table
    private boolean isItemInSaleTable(DefaultTableModel dt, String breed) {
        for (int row = 0; row < dt.getRowCount(); row++) {
            String existingBreed = (String) dt.getValueAt(row, 0);
            if (existingBreed.equals(breed)) {
                return true;
            }
        }
        return false;
    }

    // Function to check whether or not the Inventory has enough quantity   
    private boolean checkQuantityInInventory(String breed, int requestedQty) {
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/PetShopManagementSysDB", "root", "");
            String table = cbCate.getSelectedItem().toString();
            PreparedStatement pst = con.prepareStatement("SELECT Quantity FROM " +table+ " WHERE Breed = ?");
            pst.setString(1, breed);
            ResultSet rs = pst.executeQuery();

            if (rs.next()) {
                int availableQty = rs.getInt("Quantity");

                if (requestedQty <= availableQty) {
                    return true;
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }

        return false;
    }
    
    private void btnaddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnaddActionPerformed
        // TODO add your handling code here:
        String breed = (txtfeBreed.getText());
        int price = Integer.parseInt(txtfePrice.getText());
        int qty = Integer.parseInt(txtfeQty.getText());
        String table = cbCate.getSelectedItem().toString();
        int total = price * qty;
        
        if (!checkQuantityInInventory(breed, qty)) {
            JOptionPane.showMessageDialog(null, "Insufficient quantity in inventory!");
            return;
        }
        
        DefaultTableModel dt = (DefaultTableModel)tableSale.getModel();
        boolean itemConflict = isItemInSaleTable(dt, breed);
        
        if (itemConflict) {
            JOptionPane.showMessageDialog(null, "Item named " + breed + " already exists in the sale table.");
        } 
        else {
            dt.addRow(new Object[]{breed, table, price, qty, total});
            int sum = 0;
            for (int i=0; i<tableSale.getRowCount(); i++){
                sum = sum + Integer.parseInt(tableSale.getValueAt(i, 4).toString());
                txtfeTotal.setText(Integer.toString(sum));
            }
        }
        
        txtfeId.setText("");
        txtfeBreed.setText("");
        txtfePrice.setText("");
        txtfeQty.setText("");
        txtfeId.requestFocus();
    }//GEN-LAST:event_btnaddActionPerformed

    private void txtfeBalanceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtfeBalanceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtfeBalanceActionPerformed

    private void txtfeBalanceKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtfeBalanceKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER){
            int total = Integer.parseInt(txtfeTotal.getText());
            int balance = Integer.parseInt(txtfeBalance.getText());
            if (total > balance){
                JOptionPane.showMessageDialog(null, "Insufficient balance!");
            }
            else{
                int change = balance - total;
                txtfeChange.setText(Integer.toString(change));
            }
        }
    }//GEN-LAST:event_txtfeBalanceKeyPressed

    //Calculate and update the quantity in Inventory according to the sold breed
    private void updateQuantityInInventory(String category, String breed, int soldQty) {
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/PetShopManagementSysDB", "root", "");
            
            PreparedStatement pst = con.prepareStatement("SELECT Quantity FROM " + category + " WHERE Breed = ?");
            pst.setString(1, breed);
            ResultSet rs = pst.executeQuery();
            
            if (rs.next()) {
                int currentQty = rs.getInt("Quantity");
                int newQty = currentQty - soldQty;
                
                PreparedStatement updatePst = con.prepareStatement("UPDATE " + category + " SET Quantity = ? WHERE Breed = ?");
                updatePst.setInt(1, newQty);
                updatePst.setString(2, breed);
                updatePst.executeUpdate();
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }
    // Function to print the receipt
    public void printReceipt(){
        String total = txtfeTotal.getText();
        String balance = txtfeBalance.getText();
        String change = txtfeChange.getText();
        DefaultTableModel dt = (DefaultTableModel)tableSale.getModel();
        txtReceipt.setText(txtReceipt.getText() + "----------------------------------------------------\n");
        txtReceipt.setText(txtReceipt.getText() + "                                        Receipt                                        \n");
        txtReceipt.setText(txtReceipt.getText() + "----------------------------------------------------\n");
        txtReceipt.setText(txtReceipt.getText() + "Pet Name\t" + "Price\t" + "Qty\t" + "Total\n");
        
        for(int i = 0; i < dt.getRowCount(); i++){
            String breed = (String)dt.getValueAt(i, 0);
            int price = (Integer)dt.getValueAt(i, 2);
            int qty = (Integer)dt.getValueAt(i, 3);
            int total1 = (Integer)dt.getValueAt(i, 4);
            txtReceipt.setText(txtReceipt.getText() + breed + "\t" + price + "\t" + qty + "\t" + total1 + "\n");
            
        }
        txtReceipt.setText(txtReceipt.getText() + "\n");
        txtReceipt.setText(txtReceipt.getText() + "\t\t" + "Grand total:\t" + total + "\n");
        txtReceipt.setText(txtReceipt.getText() + "\t\t" + "Balance:\t" + balance + "\n");
        txtReceipt.setText(txtReceipt.getText() + "\t\t" + "Change:\t" + change + "\n");
        txtReceipt.setText(txtReceipt.getText() + "\n");
        txtReceipt.setText(txtReceipt.getText() + "----------------------------------------------------\n");
        txtReceipt.setText(txtReceipt.getText() + "                                       THANK YOU                                  \n");
    }
    
    // Function to update sale database when the user click the Print button
    private void updateSaleDB(String category, String breed, int qty, int price, int total){
        try{
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/PetShopManagementSysDB", "root", "");
            
            String sql = "INSERT INTO SaleRecord (Category, Breed, Qty, Price, Total) VALUES (?, ?, ?, ?, ?)";
            PreparedStatement pst = con.prepareStatement(sql);
            pst.setString(1, category);
            pst.setString(2, breed);
            pst.setInt(3, qty);
            pst.setInt(4, price);
            pst.setInt(5, total);
            pst.executeUpdate();
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
    }
    
    private void btnPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrintActionPerformed
        // TODO add your handling code here:
        DefaultTableModel dt = (DefaultTableModel) tableSale.getModel();

        for (int row = 0; row < dt.getRowCount(); row++) {
            String category = (String) dt.getValueAt(row,1);
            String breed = (String) dt.getValueAt(row, 0);
            int soldQty = (int) dt.getValueAt(row, 3);
            int price = (int) dt.getValueAt(row, 2);
            int total = (int) dt.getValueAt(row, 4);
            
            updateSaleDB(category, breed, soldQty, price, total);
            updateQuantityInInventory(category, breed, soldQty);
        }
        
        printReceipt();
        DefaultTableModel tb = (DefaultTableModel)tableSale.getModel();
        tb.setRowCount(0);
        txtfeTotal.setText("");
        txtfeBalance.setText("");
        txtfeChange.setText("");
    }//GEN-LAST:event_btnPrintActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        // TODO add your handling code here:
        txtReceipt.setText("");
        txtfeTotal.setText("");
        DefaultTableModel dt = (DefaultTableModel)tableSale.getModel();
        dt.setRowCount(0);
    }//GEN-LAST:event_btnClearActionPerformed

    private void txtfeQtyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtfeQtyActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtfeQtyActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Sale.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Sale.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Sale.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Sale.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Sale().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClear;
    private javax.swing.JToggleButton btnInv;
    private javax.swing.JToggleButton btnLogout;
    private javax.swing.JButton btnPrint;
    private javax.swing.JToggleButton btnSale;
    private javax.swing.JToggleButton btnSrecord;
    private javax.swing.JButton btnadd;
    private javax.swing.JComboBox<String> cbCate;
    private javax.swing.JLabel imglogo;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tableSale;
    private javax.swing.JLabel txtBalance;
    private javax.swing.JLabel txtBreed;
    private javax.swing.JLabel txtChange;
    private javax.swing.JLabel txtId;
    private javax.swing.JLabel txtPrice;
    private javax.swing.JLabel txtQty;
    private javax.swing.JTextArea txtReceipt;
    private javax.swing.JLabel txtTotal;
    private javax.swing.JLabel txtcate;
    private javax.swing.JTextField txtfeBalance;
    private javax.swing.JTextField txtfeBreed;
    private javax.swing.JTextField txtfeChange;
    private javax.swing.JTextField txtfeId;
    private javax.swing.JTextField txtfePrice;
    private javax.swing.JTextField txtfeQty;
    private javax.swing.JTextField txtfeTotal;
    private javax.swing.JLabel txttitle;
    // End of variables declaration//GEN-END:variables
}
